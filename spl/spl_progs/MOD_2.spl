alias funcnum R1;
alias pagenum R2;
//Get free page
if(funcnum==1) then
    [SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]+1;
    if([SYSTEM_STATUS_TABLE+2]==0) then 
        [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_MEM;
        multipush(R0,R1,R2,R3,R4);
        call SCHEDULER;
        multipop(R0,R1,R2,R3,R4);
    endif;
    [SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]-1;
    [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;
    alias i R6;
    i=0;
    while(i<128) do
        if([MEMORY_FREE_LIST+i]==0) then
            break;
        endif;
        i=i+1;
    endwhile;
    [MEMORY_FREE_LIST+i]=1;
    R0=i;
    return ;
endif;
//Release page
if(funcnum==2) then
    [MEMORY_FREE_LIST+pagenum]=[MEMORY_FREE_LIST+pagenum]-1;
    if([MEMORY_FREE_LIST+pagenum]==0) then
        [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1;
    endif;
    alias i R6;
    i=0;
    while(i<16) do
        if([PROCESS_TABLE+ i*16 +4]==WAIT_MEM) then
            [PROCESS_TABLE+i*16+4]=READY;
        endif;
    endwhile;
    return;
endif;


