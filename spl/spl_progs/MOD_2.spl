alias funcnum R1;
alias pagenum R2;
//Get free page
if(funcnum==1) then
    [SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]+1;
    while([SYSTEM_STATUS_TABLE+2]==0) do 
        [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_MEM;
        multipush(R0,R1,R2,R3,R4);
        call MOD_5;
        multipop(R0,R1,R2,R3,R4);
    endwhile;
    [SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]-1;
    [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;
    alias i R6;
    i=0;
    while(i<128) do
        if([MEMORY_FREE_LIST+i]==0) then
            break;
        endif;
        i=i+1;
    endwhile;
    [MEMORY_FREE_LIST+i]=1;
    R0=i;
    breakpoint;
    return ;
endif;
//Release page
if(funcnum==2) then
    [MEMORY_FREE_LIST+pagenum]=[MEMORY_FREE_LIST+pagenum]-1;
    if([MEMORY_FREE_LIST+pagenum]==0) then
        [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1;
    endif;
    alias i R6;
    i=0;
    while(i<16) do
        if([PROCESS_TABLE+ i*16 +4]==WAIT_MEM) then
            [PROCESS_TABLE+i*16+4]=READY;
        endif;
        i=i+1;
    endwhile;
    breakpoint;
    return;
endif;
if(funcnum==5) then
    alias disknum R2;
    alias i R4;
    i=0;
    while(i<160) do 
        if([DISK_MAP_TABLE+i]==disknum) then
            break;
        endif;
        i=i+1;
    endwhile;
    if(i==160) then 
        multipush(R1);
        R1=1;
        call MOD_2;
        multipop(R1);
    else
        alias j R11;
        j=i/10;
        i=i%10;
        if([PAGE_TABLE_BASE + j*20+2*i]!=-1) then
            R0=[PAGE_TABLE_BASE + j*20+2*i];
        endif;

    endif;
    
    multipush(R1,R2,R3,R4);
    R1=2;
    R2=[SYSTEM_STATUS_TABLE+1];
    R3=R0;
    R4=disknum;
    call MOD_4;
    multipop(R1,R2,R3,R4);
    return ;
endif;
if(funcnum==4) then
    [DISK_FREE_LIST+R2]=[DISK_FREE_LIST+R2]-1;
    return;

endif;





